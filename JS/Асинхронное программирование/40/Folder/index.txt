Promise.allSettled и Promise.any — это методы работы с промисами в JavaScript, которые имеют свои особенности по сравнению с 
Promise.all. Давайте рассмотрим каждый из них по отдельности и обсудим их различия.

1. Promise.allSettled
Promise.allSettled позволяет вам ждать завершения всех переданных промисов, независимо от того, были ли они выполнены успешно или отклонены. 
Он возвращает новый промис, который будет выполнен, когда все переданные промисы завершаются, и результатом будет массив 
объектов, описывающих состояние каждого промиса.

2. Promise.any
Promise.any возвращает новый промис, который выполнится, как только первый из переданных промисов будет выполнен успешно. 
Если все промисы будут отклонены, `Promise.any` отклонит свой промис с ошибкой `AggregateError`, содержащей массив причин отклонения.

3. Сравнение с Promise.all
- Promise.all
- возвращает промис, который выполнится, если все переданные промисы выполнены. 
Если хотя бы один из промисов отклонён, он тоже будет отклонён.
- Promise.allSettled:
- возвращает промис, который выполнится, когда все промисы завершены, независимо от их статуса (выполнен или отклонён). 
Предоставляет информацию о статусе и результатах всех промисов.
- Promise.any:
- возвращает промис, который выполнится, как только первый из переданных промисов будет выполнен успешно. 
Если все промисы отклонены, он отклонится с ошибкой.

Когда использовать
- Promise.all: когда вам нужно дождаться всех промисов и действовать только при успешном завершении.
- Promise.allSettled: когда вы хотите получить информацию о всех промисах, независимо от того, завершились ли они успешно или нет.
- Promise.any когда вам нужно получить результат первого успешно выполненного промиса, игнорируя отклонённые.

3аключение
Эти методы представляют разные сценарии работы с асинхронными операциями в JavaScript и позволяют 
разработчикам более гибко управлять промисами, облегчая обработку асинхронного кода.