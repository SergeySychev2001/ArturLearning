Что такое WebSockets?

WebSockets — это протокол, который обеспечивает постоянное двунаправленное соединение между клиентом (например, веб-браузером) и сервером. 
Он позволяет обмениваться данными в реальном времени, что делает его особенно полезным для приложений, где требуется быстрое взаимодействие, 
таких как чаты, онлайн-игры и другие интерактивные приложения.

Как работают WebSockets?

1. Установка соединения: WebSockets используют начальную процедуру "рукопожатия" (handshake), основанную на HTTP. Клиент отправляет
HTTP-запрос с заголовками, указывающими на то, что он хочет использовать WebSocket. Если сервер поддерживает WebSockets, он отвечает с помощью 
статус-кода 101 ("Switching Protocols") и устанавливает соединение.
2. Двухсторонняя коммуникация: После установления соединения клиент и сервер могут обмениваться данными в обоих направлениях в любое 
время, отправляя сообщения друг другу. Эта связь более эффективна по сравнению с традиционными методами, такими как AJAX, поскольку отсутствует 
необходимость открывать новое соединение для каждого запроса.
3. Закрытие соединения: Когда общение завершается, одно из сторон может отправить сообщение о закрытии соединения, после чего обе 
стороны закрывают соединение.

Применение WebSockets
WebSockets идеально подходят для приложений, требующих постоянного обмена данными в реальном времени. Вот несколько примеров использования:

- Чат-приложения: Пользователи могут отправлять и получать сообщения мгновенно.
- Игры в реальном времени: Игроки могут взаимодействовать друг с другом без задержек.
- Приложения для отслеживания данных: Например, финансовые приложения могут обновлять котировки акций в реальном времени.
- Коллаборативные платформы: Более эффективно реализуют поддержку одновременной работы нескольких пользователей (
    например, Google Docs в режиме реального времени).
 
Объяснение код
1. Сервер (Node.js)
- Мы используем библиотеку `ws` для создания WebSocket сервера.
- Сервер слушает соединения на порту 8080.
- При подключении нового клиента мы обрабатываем входящие сообщения и отправляем ответы.
2.Клиент (HTML + JavaScript)
- Клиент создаёт WebSocket соединение с сервером.
- При установлении соединения клиент может отправлять сообщения и получать ответы.
- Все полученные сообщения отображаются на странице.

Заключение
WebSockets — это мощный инструмент для создания приложений в реальном времени, который обеспечивает постоянное соединение между 
клиентом и сервером. Они хорошо подходят для различных сценариев использования, требующих быстрой и эффективной передачи данных.