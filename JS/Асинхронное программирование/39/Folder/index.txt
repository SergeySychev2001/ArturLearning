Promise.race` — это метод в JavaScript, который позволяет запустить несколько промисов одновременно и получает результат первого из 
них, который будет выполнен или отклонён. Он возвращает новый промис, который будет разрешён или отклонён с тем же значением или 
причиной, что и первый выполнившийся или отклонившийся промис.

Основные характеристики `Promise.race`
1. Первое завершение: `Promise.race` фокусируется только на первом завершившемся промисе 
(установившем состояние resolved или rejected), игнорируя остальные промисы, которые могут ещё выполняться.
2. Значение результата: Если первый промис, который завершился, выполнен, Promise, возвращаемый `Promise.race`, будет 
выполнен с его значением. Если отклонён — он будет отклонён с той же причиной.
3. Не ожидает завершения всех промисов: В отличие от `Promise.all`, который ждет, пока все промисы будут выполнены, `Promise.race` 
возвращается сразу, как только первый промис завершится.


Когда использовать `Promise.race`
- Сценарии с тайм-аутом: Например, если у вас есть запрос к API и вы хотите установить тайм-аут. Вы можете 
использовать `Promise.race` между запросом и промисом, который будет разрешён через заданный тайм-аут. Это 
позволяет вам выполнить действия, если запрос не завершится вовремя.
- Альтернативные ресурсы: Если вы ожидаете несколько источников данных и хотите использовать первый, который 
вернет результат (например, использование нескольких API).
- Обработка запросов: В случае, если вам не важно, какие из запросов будут выполнены первыми, но важно получить 
первое значение для продолжения работы.

Заключение
`Promise.race` — это очень полезный метод для обработки случаев, когда нужно реагировать на первое завершение промиса, будь 
то успешное выполнение или ошибка. Он позволяет эффективно управлять асинхронным кодом и переводит взаимодействие с пользователем 
на новый уровень, обеспечивая более плавный и отзывчивый интерфейс.