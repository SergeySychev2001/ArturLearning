В JavaScript, который является однопоточным языком, управление выполнением кода осуществляется с помощью 
двух важных концепций: стека вызовов (Call Stack) и очереди событий (Event Queue). Давайте разберем каждую из них.
Стек вызовов (Call Stack)
Стек вызовов — это структура данных, которая хранит контекст выполнения функций. Когда функция вызывается, она 
помещается в стек. Когда функция завершает выполнение, она удаляется из стека.

Очередь событий (Event Queue)
Очередь событий — это структура данных, в которую помещаются обработчики событий и асинхронные задачи, такие как колбэки от 
`setTimeout`, `setInterval` и промисы. Когда стек вызовов опустошается, задачи из очереди событий могут быть выполнены.

Итог

1. Стек вызовов (Call Stack) выполняет синхронные вызовы функций. Он обрабатывает код в том порядке, в котором функции вызываются.
2. Очередь событий (Event Queue) хранит обработчики событий и асинхронные задачи. Как только стек вызовов 
пуст, события из очереди обрабатываются в порядке их поступления.