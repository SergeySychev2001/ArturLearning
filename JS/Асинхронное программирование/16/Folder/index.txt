 В JavaScript, особенно в контексте работы с асинхронным кодом и событийным циклом, макрозадачи (macro-tasks) и микрозадачи 
 (micro-tasks) играют важную роль в порядках выполнения кода.

 Макрозадачи (Macro-tasks)

Макрозадачи — это более крупные единицы работы, которые включают в себя, например, выполнение кода, обработку событий 
или установку таймеров. Они выполняются в основном потоке, и после завершения всех микрозадач, которые были созданы во время 
выполнения предыдущей макрозадачи, запускается следующая макрозадача.

Примеры макрозадач:
- `setTimeout()` или `setInterval()`
- Обработка событий (например, клики, переходы и т.д.)
- Выполнение скриптов, загруженных с помощью `<script>` в HTML.

 Микрозадачи (Micro-tasks)

Микрозадачи — это более мелкие задачи, которые обычно требуют более приоритетного выполнения. 
Они выполняются после завершения текущей макрозадачи и перед следующим рендерингом и перед выполнением следующей макрозадачи.

Примеры микрозадач:
- Промисы (вызовы `Promise.then()` и `Promise.catch()`)
- `MutationObserver`