async и await — это синтаксические конструкции в языке JavaScript, введенные в стандарт ECMAScript 2017 (ES8), 
которые позволяют работать с асинхронным кодом более удобно и читабельно, чем с помощью Promises и методов `.then()`. 
Давайте разберемся, как они работают и как связаны с Promises.

Promises
Promises (обещания) — это объекты, представляющие результат асинхронной операции. Promise может находиться в одном из трех состояний:
1. Pending (ожидание): начальное состояние, не выполнено и не отклонено.
2. Fulfilled (выполнено): операция завершена успешно.
3. Rejected (отклонено): операция завершена с ошибкой.

С Promises можно работать с помощью методов .then(), .catch() и .finally().



async/await

Синтаксис async/await упрощает работу с асинхронным кодом, используя похожий на синхронный подход.

- asyncперед функцией объявляет эту функцию асинхронной, и она всегда возвращает Promise.
 Если функция возвращает значение, Promise будет выполнен с этим значением. Если выбрасывается ошибка, Promise будет отклонен.

- await используется внутри асинхронной функции и позволяет «подождать» выполнения Promise. 
В то время как выполнение функции останавливается, JavaScript продолжает выполнять другие операции.