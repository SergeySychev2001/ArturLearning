CORS (Cross-Origin Resource Sharing) — это механизм веб-браузеров, который позволяет ограничить доступ к ресурсам 
на одном домене (или источнике) с других доменов. Этот механизм предназначен для предотвращения потенциальных угроз 
безопасности, таких как кросс-доменные атаки, и обеспечивает способ управления тем, какие источники могут взаимодействовать друг с другом.

Как работает CORS?
Когда веб-страница делает запрос на ресурс, который находится на другом домене, браузер производит "кросс-доменные запросы". 
В этом случае браузер сначала отправляет предварительный (preflight) запрос, чтобы узнать, разрешает ли сервер такой доступ. 
Для этого браузер делает запрос типа `OPTIONS`, и если сервер поддерживает CORS, он вернёт соответствующие заголовки ответа.

Заголовки CORS:
1.Access-Control-Allow-Origin — этот заголовок указывает, какие источники (домен, протокол и порт) могут получать доступ к ресурсам. Например:
- Access-Control-Allow-Origin:  — позволяет всем сайтам обращаться к ресурсам.
- Access-Control-Allow-Origin: https://example.com — разрешает доступ только с https://example.com
2. Access-Control-Allow-Methods — указывает, какие HTTP-методы разрешены (например, GET, POST, PUT, DELETE).
3. Access-Control-Allow-Headers*— указывает, какие заголовки могут быть использованы при фактическом запросе.


Что произойдет без CORS?
Если сервер не настроен для обработки CORS, браузер заблокирует запрос, и вы получите ошибку в консоли о том, что 
кросс-доменные запросы заблокированы.

Заключение
CORS — важный аспект безопасности веб-приложений, который позволяет контролировать, какие источники могут 
взаимодействовать с данными. Правильная настройка CORS необходима для обеспечения безопасности и функциональности 
современных веб-приложений, которые часто требуют взаимодействия с внешними API и ресурсами на других доменах.