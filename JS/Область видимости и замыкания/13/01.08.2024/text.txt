Цепочка областей видимости в JavaScript (или "scope chain") — это механизм, который определяет, 
как интерпретатор JavaScript находит переменные в различных областях видимости. Область видимости 
(scope) определяется контекстом выполнения кода, и когда вы обращаетесь к переменной, JavaScript ищет 
её в текущей области видимости, а затем в родительских областях, пока не найдет переменную или не достигнет глобальной области видимости.

Основные моменты цепочки областей видимости:
1. Лексическая область видимости: JavaScript использует лексическую область видимости, что означает, 
что область видимости определяется местом, где функции и блоки кода были написаны (то есть их "лексическое окружение"), а 
не тем, где они вызываются.
2. Глобальная область видимости: Переменные, объявленные в глобальной области, доступны из любой части программы. 
Это произойдет, если переменная объявлена вне любой функции.
3. Функциональная область видимости: Переменные, объявленные внутри функции, доступны только в этой функции и ее вложенных функциях.
4. Область видимости блока (ES6): С введением let и const в ES6 блоки (например, конструкции if, for, и т.п.) теперь 
также имеют свою область видимости.

chatGpt