В JavaScript область видимости (или scope) определяет, каким образом переменные доступны в различных частях кода. 
Во вложенных функциях существует механизм, называемый лексическим окружением (lexical scope), который определяет 
доступность переменных в зависимости от их местоположения в коде.

Вот основные моменты, которые стоит учесть при работе с областями видимости во вложенных функциях:
1. Лексическое окружение: JavaScript использует лексическое окружение для определения области видимости. 
Это означает, что функции «помнят» свое местоположение при создании, а не при вызове.
2. Доступ к внешним переменным: Вложенные функции могут получить доступ к переменным, объявленным в их внешних функциях. 
Это позволяет вложенной функции использовать переменные, объявленные в более внешних областях видимости.
3. Область видимости функции: Каждый раз, когда создается функция, создается новая область видимости. Переменные, объявленные 
внутри функции, доступны только в этой функции и не могут быть доступны извне.