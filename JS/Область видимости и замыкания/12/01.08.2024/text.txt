В JavaScript область видимости (scope) определяет, где переменные могут быть доступны и какие значения они могут иметь в 
различном контексте выполнения. Когда в разных областях видимости используются переменные с одинаковыми именами, JavaScript 
применяет правила лексического окружения для определения того, какая переменная будет использована.

Вот основные моменты, касающиеся области видимости и переменных с одинаковыми именами:
1. Глобальная область видимости: Переменные, объявленные вне любых функций или блоков, имеют глобальную область 
видимости и доступны из любой части кода.
2. Локальная область видимости: Переменные, объявленные внутри функции, имеют локальную область видимости. 
Они недоступны вне этой функции. Если в функции объявлена переменная с тем же именем, что и глобальная переменная, 
то локальная переменная будет иметь приоритет.
3. Блочная область видимости: С введением `let` и `const` в ES6, JavaScript поддерживает блочную область видимости. 
Переменные, объявленные с помощью `let` или `const` внутри блока (например, в цикле или условии), доступны только внутри этого блока.
