В JavaScript существует несколько подходов к упрощению сложных условных конструкций. Вот некоторые из наиболее распространенных методов:

1. Использование функций: Вынесите сложные условия в отдельные функции, чтобы сделать код более читаемым.
   function isEligible(user) {
       return user.age >= 18 && user.hasPermission;
   }

   if (isEligible(currentUser)) {
       // действия для подходящего пользователя
   }
   


2.Логические переменные: Используйте логические переменные для промежуточных условий, чтобы уменьшить количество вложений.
   const isAdult = user.age >= 18;
   const hasPermission = user.hasPermission;

   if (isAdult && hasPermission) {
       // действия
   }
   


3.Объекты с дескрипторами: Используйте объекты для управления состоянием или параметрами. Это может помочь избежать многократных условий.
   const actions = {
       admin: () => { /* действия для админа */ },
       user: () => { /* действия для пользователя */ },
       guest: () => { /* действия для гостя */ },
   };

   actions[user.role] ? actions[user.role]() : actions.guest();
   

4. Тернарные операции (используйте с осторожностью): Для простых условий можно применить тернарные операторы, но стоит следить за читаемостью.
   const result = (condition1) ? value1 : (condition2 ? value2 : value3);
   


5. Switch вместо if: В некоторых случаях структура switch может оказаться более понятной, чем множество условий if-else.
   switch (user.role) {
       case 'admin':
           // действия для админа
           break;
       case 'user':
           // действия для пользователя
           break;
       default:
           // действия для гостей
   }
   


6. Подход с использованием массивов или коллекций: В некоторых случаях можно изменить условную логику 
на использование массивов или объектов для хранения состояний и выполнения соответствующих действий.
   const validRoles = ['admin', 'editor', 'user'];
   if (validRoles.includes(user.role)) {
       // действия для валидного роли
   }
   


7. Паттерн "Guard clauses: Вместо глубокой вложенности, проверяйте условия и выходите из функции, если они не выполняются.
   function processUser(user) {
       if (!user) return; 
       if (user.age < 18) return; 
   
       // основной код для пользователей старше 18
   }
   